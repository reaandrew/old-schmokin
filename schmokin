#! /bin/bash
VERSION=VERSION_HERE
#   while [ -n "$1" ]; do
#       case "$1" in
#       -v )
#           echo "version $VERSION"
#           exit 0
#           ;;
#       esac
#       shift
#   done

export RED='\033[0;31m' export NC='\033[0m' # No Color
export GREEN='\033[0;32m'

CURL_HTTP_SED="s/^> ([A-Z]{3,6}) ([a-zA-Z0-9/\.\_\~\:\/\?\#\!\$\&\(\)\*\+\,\\\;]+) HTTP\/1.1/\1,\2/p"

width=75
data=""

if [[ -p /dev/stdin ]]
then
    data=$(cat /dev/stdin)
fi

method=$(echo "$data" | sed -rn "$CURL_HTTP_SED"  | cut -d, -f1)
path=$(echo "$data" | sed -rn "$CURL_HTTP_SED" | cut -d, -f2)


fail=0

printf '%s %s\n' $method $path
printf '%0.1s' "-"{1..85}
printf '\n'

jqexpr=''
jqvalue=''

R=""

pass(){
    printf "%-${width}s [${GREEN}%s${NC}]\n" "$1" "${2:-PASS}"
}

fail(){
    printf "%-${width}s [${RED}%s${NC}]\n" "$1" "${2:-FAIL}"
    fail=1
}

msg=""
RESULT=""

while [ -n "$1" ]; do
    case "$1" in
    --status-code|-s )
            actual=$(echo "$data" | sed -rn 's/.*HTTP\/1.[0-9].*([0-9]{3}).*/\1/p' | sed 's/\r//g')
            msg=$(printf "expected status code = %s actual %s" $2 $actual)
            if echo "$data" | grep -q "HTTP/1.[0-9] $2";
            then
              pass "${msg}" "PASS"
            else 
              fail "$msg" "FAIL"
            fi
            MODE="$1 $2"
            shift
            ;;
    --jq-expr)
        msg=$2
        JSON=$(echo "$data" | tail -n -1) 
        RESULT=$(echo $JSON | jq "$2" | sed 's/\"//g')
       ;;
    --eq)
        msg="expected ${msg:0:60} = $2 actual $RESULT"
        if [ "$RESULT" = "$2" ];
        then
         printf "%-${width}s [${GREEN}%s${NC}]\n" "$msg" "PASS"
        else
         fail=1
         printf "%-${width}s [${RED}%s${NC}]\n" "$msg" "FAIL"
        fi
       ;;
    --gt)
        msg="expected ${msg:0:60} > $2 actual $RESULT"
        if [ "$RESULT" -gt "$2" ];
        then
         printf "%-${width}s [${GREEN}%s${NC}]\n" "$msg" "PASS"
        else
         fail=1
         printf "%-${width}s [${RED}%s${NC}]\n" "$msg" "FAIL"
        fi
       ;;
    -v )
		echo "version $VERSION"
        exit 0
        ;;
    esac
    shift
done

printf '%0.1s' "-"{1..85}
printf '\n'
if [ "$fail" = "1" ];
then
    printf "%-${width}s [${RED}%s${NC}]\n\n" "RESULT" "FAILURE"
    exit $fail
else
    printf "%-${width}s [${GREEN}%s${NC}]\n\n" "RESULT" "SUCCESS"
    exit 0
fi

